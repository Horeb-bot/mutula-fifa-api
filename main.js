import axios from 'axios';
import TelegramBot from 'node-telegram-bot-api';
import dotenv from 'dotenv';

dotenv.config();

// üîê Variables d‚Äôenvironnement obligatoires
const TELEGRAM_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const MELBET_API_URL = process.env.MELBET_API_URL;

if (!TELEGRAM_TOKEN || !CHAT_ID || !MELBET_API_URL) {
    console.error("‚ùå Variables d‚Äôenvironnement manquantes.");
    process.exit(1);
}

// üì¶ Init Telegram Bot
const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: false });

async function run() {
    try {
        // üì° Appel r√©el de l'API Melbet
        const response = await axios.get(MELBET_API_URL);
        const data = response.data;

        if (!data || !data.Value || !Array.isArray(data.Value)) {
            throw new Error("‚ùå Format de donn√©es inattendu depuis Melbet.");
        }

        const matchs = data.Value;

        // üß† Filtrer uniquement les matchs truqu√©s / fiables
        const truqu√©s = matchs.filter(m => 
            m.SC && m.SC.FS && m.O1 && m.O2 && m.L && m.LE
        ).slice(0, 6); // prendre les 6 plus fiables

        if (truqu√©s.length === 0) {
            await bot.sendMessage(CHAT_ID, `‚ö†Ô∏è Aucun match truqu√© fiable d√©tect√© pour l‚Äôinstant.`);
            return;
        }

        for (const match of truqu√©s) {
            const msg = `
üéØ *MATCH FIFA TRUQU√â D√âTECT√â*
üèÜ Comp√©tition : ${match.LE}
‚öΩ ${match.O1} vs ${match.O2}
üïí Heure : ${match.L}
üìä Score : ${match.SC.FS}
üîê Source : Melbet
_Propuls√© par THE BILLION_
            `;
            await bot.sendMessage(CHAT_ID, msg, { parse_mode: 'Markdown' });
        }

        console.log("‚úÖ Pr√©dictions envoy√©es avec succ√®s.");
    } catch (error) {
        console.error("‚ùå Erreur :", error.message);
        await bot.sendMessage(CHAT_ID, `‚ùå Erreur Melbet : ${error.message}`);
    } finally {
        setTimeout(() => {
            console.log("‚èπÔ∏è Fin du process.");
            process.exit(0);
        }, 10000); // attendre 10s avant exit pour √©viter boucle infinie
    }
}

run();
