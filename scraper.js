import axios from 'axios';
import TelegramBot from 'node-telegram-bot-api';
import dotenv from 'dotenv';

dotenv.config();

// 1Ô∏è‚É£ Configuration des variables d'environnement
const TELEGRAM_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const API_URL = process.env.MUTULA_API_URL || 'https://mutula-fifa-api.onrender.com/fifa'; // √† personnaliser si besoin

if (!TELEGRAM_TOKEN || !CHAT_ID) {
    console.error("‚ùå Le token Telegram ou le chat ID est manquant.");
    process.exit(1);
}

const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: false });

// 2Ô∏è‚É£ Fonction principale
async function run() {
    try {
        const response = await axios.get(API_URL);
        const matchs = response.data?.matchs;

        if (!matchs || !Array.isArray(matchs)) {
            throw new Error("‚ùå Format inattendu ou matchs indisponibles.");
        }

        if (matchs.length === 0) {
            await bot.sendMessage(CHAT_ID, `‚ùå Aucun match truqu√© d√©tect√© pour l'instant.`);
        } else {
            for (const match of matchs) {
                const message = `
üéØ *MATCH FIFA TRUQU√â D√âTECT√â*
üèÜ Comp√©tition : ${match.competition}
‚öΩ √âquipes : ${match.teams}
‚è±Ô∏è Heure : ${match.time}
üìä Score Exact : ${match.score}
üíØ Fiabilit√© : ${match.confidence || 'Non sp√©cifi√©e'}
_Propuls√© par THE BILLION_ üí∞
                `;
                await bot.sendMessage(CHAT_ID, message, { parse_mode: 'Markdown' });
            }
        }
    } catch (error) {
        console.error("‚ùå Erreur lors de la r√©cup√©ration ou de l'envoi :", error.message);
        await bot.sendMessage(CHAT_ID, `‚ùå Erreur : ${error.message}`);
    }

    console.log("‚úÖ Scraping termin√©. On attend 30 sec avant fermeture...");

    setTimeout(() => {
        console.log("‚èπÔ∏è Fin du process proprement.");
        process.exit(0); // Cl√¥ture propre
    }, 30000); // Attente 30 secondes pour √©viter le red√©marrage imm√©diat
}

run();
